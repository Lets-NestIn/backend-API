openapi: 3.0.0
info:
  title: Real Estate API
  version: 1.0.0
  description: API for managing real estate properties
servers:
  - url: http://localhost:3000
    description: Development server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Property:
      type: object
      required:
        - title
        - description
        - address
        - city
        - state
        - zipCode
        - country
        - propertyType
        - price
        - size
        - bedrooms
        - bathrooms
      properties:
        title:
          type: string
        description:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
        propertyType:
          type: string
        price:
          type: number
        size:
          type: number
        bedrooms:
          type: number
        bathrooms:
          type: number
        amenities:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: string
        ownerId:
          type: string
        agentId:
          type: string
        status:
          type: string
          default: available
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
paths:
  /properties:
    get:
      summary: Get all properties
      tags: [Properties]
      responses:
        200:
          description: The list of properties
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Property"
    post:
      summary: Create a new property
      tags: [Properties]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Property"
      responses:
        201:
          description: The property was successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Property"
  /properties/{id}:
    get:
      summary: Get a property by ID
      tags: [Properties]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The property ID
      responses:
        200:
          description: The property description by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Property"
        404:
          description: Property not found
    put:
      summary: Update a property by ID
      tags: [Properties]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The property ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Property"
      responses:
        200:
          description: The property was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Property"
        404:
          description: Property not found
    delete:
      summary: Remove a property by ID
      tags: [Properties]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The property ID
      responses:
        204:
          description: The property was deleted
        404:
          description: Property not found
